08/16/2023 04:35:22 - WARNING - __main__ -   Process rank: -1, device: hpu
distributed training: False, 16-bits training: True
08/16/2023 04:35:22 - INFO - __main__ -   Training/evaluation parameters GaudiTrainingArguments(
_n_gpu=1,
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-06,
adjust_throughput=False,
auto_find_batch_size=False,
bf16=True,
data_seed=None,
dataloader_drop_last=False,
dataloader_num_workers=0,
dataloader_pin_memory=True,
ddp_bucket_cap_mb=230,
ddp_find_unused_parameters=False,
ddp_timeout=1800,
debug=[],
deepspeed=None,
disable_tqdm=False,
distribution_strategy=ddp,
do_eval=False,
do_predict=False,
do_train=True,
eval_accumulation_steps=None,
eval_delay=0,
eval_steps=None,
evaluation_strategy=no,
fsdp_config=None,
fsdp_min_num_params=0,
fsdp_transformer_layer_cls_to_wrap=None,
full_determinism=False,
gaudi_config_name=None,
gradient_accumulation_steps=1,
gradient_checkpointing=False,
greater_is_better=None,
group_by_length=False,
half_precision_backend=hpu_amp,
hub_model_id=None,
hub_private_repo=False,
hub_strategy=every_save,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
include_inputs_for_metrics=False,
jit_mode_eval=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=0.0001,
length_column_name=length,
load_best_model_at_end=False,
local_rank=-1,
log_level=passive,
log_level_replica=warning,
log_on_each_node=True,
logging_dir=./checkpoints/starcoder-lora-2-12-1/runs/Aug16_04-35-22_sysid674631,
logging_first_step=False,
logging_nan_inf_filter=False,
logging_steps=1,
logging_strategy=steps,
lr_scheduler_type=linear,
max_grad_norm=1.0,
max_steps=-1,
metric_for_best_model=None,
no_cuda=False,
non_blocking_data_copy=False,
num_train_epochs=5.0,
optim=adamw_torch,
optim_args=None,
output_dir=./checkpoints/starcoder-lora-2-12-1,
overwrite_output_dir=False,
past_index=-1,
per_device_eval_batch_size=8,
per_device_train_batch_size=12,
pipelining_fwd_bwd=False,
prediction_loss_only=False,
profiling_steps=0,
profiling_warmup_steps=0,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
ray_scope=last,
remove_unused_columns=True,
report_to=['tensorboard'],
resume_from_checkpoint=None,
run_name=./checkpoints/starcoder-lora-2-12-1,
save_on_each_node=False,
save_safetensors=False,
save_steps=500,
save_strategy=epoch,
save_total_limit=None,
seed=42,
skip_memory_metrics=True,
throughput_warmup_steps=3,
torch_compile=False,
torch_compile_backend=None,
torch_compile_mode=None,
torchdynamo=None,
use_habana=True,
use_hpu_graphs=False,
use_hpu_graphs_for_inference=False,
use_hpu_graphs_for_training=False,
use_ipex=False,
use_lazy_mode=True,
use_legacy_prediction_loop=False,
use_mps_device=False,
warmup_ratio=0.0,
warmup_steps=0,
weight_decay=0.0,
xpu_backend=None,
)
[INFO|configuration_utils.py:668] 2023-08-16 04:35:22,954 >> loading configuration file config.json from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/config.json
[INFO|configuration_utils.py:720] 2023-08-16 04:35:22,957 >> Model config GPTBigCodeConfig {
  "_name_or_path": "bigcode/starcoder",
  "activation_function": "gelu",
  "architectures": [
    "GPTBigCodeForCausalLM"
  ],
  "attention_softmax_in_fp32": true,
  "attn_pdrop": 0.1,
  "bos_token_id": 0,
  "embd_pdrop": 0.1,
  "eos_token_id": 0,
  "inference_runner": 0,
  "initializer_range": 0.02,
  "layer_norm_epsilon": 1e-05,
  "max_batch_size": null,
  "max_sequence_length": null,
  "model_type": "gpt_bigcode",
  "multi_query": true,
  "n_embd": 6144,
  "n_head": 48,
  "n_inner": 24576,
  "n_layer": 40,
  "n_positions": 8192,
  "pad_key_length": true,
  "pre_allocate_kv_cache": false,
  "resid_pdrop": 0.1,
  "scale_attention_softmax_in_fp32": true,
  "scale_attn_weights": true,
  "summary_activation": null,
  "summary_first_dropout": 0.1,
  "summary_proj_to_labels": true,
  "summary_type": "cls_index",
  "summary_use_proj": true,
  "torch_dtype": "float32",
  "transformers_version": "4.28.1",
  "use_cache": true,
  "validate_runner_input": true,
  "vocab_size": 49152
}

[INFO|tokenization_utils_base.py:1809] 2023-08-16 04:35:23,072 >> loading file vocab.json from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/vocab.json
[INFO|tokenization_utils_base.py:1809] 2023-08-16 04:35:23,073 >> loading file merges.txt from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/merges.txt
[INFO|tokenization_utils_base.py:1809] 2023-08-16 04:35:23,073 >> loading file tokenizer.json from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/tokenizer.json
[INFO|tokenization_utils_base.py:1809] 2023-08-16 04:35:23,073 >> loading file added_tokens.json from cache at None
[INFO|tokenization_utils_base.py:1809] 2023-08-16 04:35:23,073 >> loading file special_tokens_map.json from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/special_tokens_map.json
[INFO|tokenization_utils_base.py:1809] 2023-08-16 04:35:23,073 >> loading file tokenizer_config.json from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/tokenizer_config.json
/usr/local/lib/python3.8/dist-packages/datasets/load.py:2072: FutureWarning: 'use_auth_token' was deprecated in favor of 'token' in version 2.14.0 and will be removed in 3.0.0.
You can remove this warning by passing 'token=None' instead.
  warnings.warn(
[INFO|modeling_utils.py:2534] 2023-08-16 04:35:23,629 >> loading weights file pytorch_model.bin from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/pytorch_model.bin.index.json
[INFO|modeling_utils.py:1176] 2023-08-16 04:35:23,630 >> Instantiating GaudiGPTBigCodeForCausalLM model under default dtype torch.bfloat16.
[INFO|configuration_utils.py:575] 2023-08-16 04:35:23,630 >> Generate config GaudiGenerationConfig {
  "_from_model_config": true,
  "bos_token_id": 0,
  "eos_token_id": 0,
  "ignore_eos": null,
  "static_shapes": null,
  "transformers_version": "4.28.1"
}

Loading checkpoint shards:   0%|          | 0/7 [00:00<?, ?it/s]Loading checkpoint shards:  14%|█▍        | 1/7 [00:04<00:27,  4.61s/it]Loading checkpoint shards:  29%|██▊       | 2/7 [00:06<00:16,  3.22s/it]Loading checkpoint shards:  43%|████▎     | 3/7 [00:09<00:11,  2.82s/it]Loading checkpoint shards:  57%|█████▋    | 4/7 [00:11<00:07,  2.65s/it]Loading checkpoint shards:  71%|███████▏  | 5/7 [00:13<00:04,  2.48s/it]Loading checkpoint shards:  86%|████████▌ | 6/7 [00:16<00:02,  2.44s/it]Loading checkpoint shards: 100%|██████████| 7/7 [00:17<00:00,  1.94s/it]Loading checkpoint shards: 100%|██████████| 7/7 [00:17<00:00,  2.43s/it]
[INFO|modeling_utils.py:3190] 2023-08-16 04:35:40,937 >> All model checkpoint weights were used when initializing GaudiGPTBigCodeForCausalLM.

[INFO|modeling_utils.py:3198] 2023-08-16 04:35:40,937 >> All the weights of GaudiGPTBigCodeForCausalLM were initialized from the model checkpoint at bigcode/starcoder.
If your task is similar to the task the model of the checkpoint was trained on, you can already use GaudiGPTBigCodeForCausalLM for predictions without further training.
[INFO|configuration_utils.py:537] 2023-08-16 04:35:41,034 >> loading configuration file generation_config.json from cache at /starcoder/cache/models--bigcode--starcoder/snapshots/7c6927d25ac2ec0b9e81d98bd54926e36f5c9de1/generation_config.json
[INFO|configuration_utils.py:575] 2023-08-16 04:35:41,035 >> Generate config GaudiGenerationConfig {
  "_from_model_config": true,
  "bos_token_id": 0,
  "eos_token_id": 0,
  "ignore_eos": null,
  "static_shapes": null,
  "transformers_version": "4.28.1"
}

08/16/2023 04:35:41 - INFO - __main__ -   Using data collator of type DataCollatorForSeq2Seq
=============================HABANA PT BRIDGE CONFIGURATION =========================== 
 PT_HPU_LAZY_MODE = 1
 PT_HPU_LAZY_EAGER_OPTIM_CACHE = 1
 PT_HPU_ENABLE_COMPILE_THREAD = 0
 PT_HPU_ENABLE_EXECUTION_THREAD = 1
 PT_HPU_ENABLE_LAZY_EAGER_EXECUTION_THREAD = 1
 PT_ENABLE_INTER_HOST_CACHING = 0
 PT_ENABLE_INFERENCE_MODE = 1
 PT_ENABLE_HABANA_CACHING = 1
 PT_HPU_MAX_RECIPE_SUBMISSION_LIMIT = 0
 PT_HPU_MAX_COMPOUND_OP_SIZE = 9223372036854775807
 PT_HPU_MAX_COMPOUND_OP_SIZE_SS = 10
 PT_HPU_ENABLE_STAGE_SUBMISSION = 1
 PT_HPU_STAGE_SUBMISSION_MODE = 2
 PT_HPU_PGM_ENABLE_CACHE = 1
 PT_HPU_ENABLE_LAZY_COLLECTIVES = 0
 PT_HCCL_SLICE_SIZE_MB = 16
 PT_HCCL_MEMORY_ALLOWANCE_MB = 0
 PT_HPU_INITIAL_WORKSPACE_SIZE = 0
 PT_HABANA_POOL_SIZE = 24
 PT_HPU_POOL_STRATEGY = 5
 PT_HPU_POOL_LOG_FRAGMENTATION_INFO = 0
 PT_ENABLE_MEMORY_DEFRAGMENTATION = 1
 PT_ENABLE_DEFRAGMENTATION_INFO = 0
 PT_HPU_ENABLE_SYNAPSE_OUTPUT_PERMUTE = 1
 PT_HPU_ENABLE_VALID_DATA_RANGE_CHECK = 1
 PT_HPU_FORCE_USE_DEFAULT_STREAM = 0
 PT_RECIPE_CACHE_PATH = 
 PT_HPU_ENABLE_REFINE_DYNAMIC_SHAPES = 0
 PT_HPU_DYNAMIC_MIN_POLICY_ORDER = 4,5,3,1
 PT_HPU_DYNAMIC_MAX_POLICY_ORDER = 2,4,5,3,1
 PT_HPU_LAZY_ACC_PAR_MODE = 1
 PT_HPU_CLUSTERED_PROGRAM = 0
 PT_HPU_CLUSTERED_PROGRAM_ENFORCE = 0
 PT_HPU_CLUSTERED_PROGRAM_SPLIT_STR = default
 PT_HPU_CLUSTERED_PROGRAM_SCHED_STR = default
=============================SYSTEM CONFIGURATION ========================================= 
Num CPU Cores = 160
CPU RAM = 1056389528 KB 
============================================================================================ 
[INFO|trainer.py:762] 2023-08-16 04:36:08,439 >> The following columns in the training set don't have a corresponding argument in `PeftModelForCausalLM.forward` and have been ignored: prompt_targets, prompt_sources. If prompt_targets, prompt_sources are not expected by `PeftModelForCausalLM.forward`,  you can safely ignore this message.
[INFO|trainer.py:770] 2023-08-16 04:36:08,450 >> ***** Running training *****
[INFO|trainer.py:771] 2023-08-16 04:36:08,450 >>   Num examples = 2,156
[INFO|trainer.py:772] 2023-08-16 04:36:08,450 >>   Num Epochs = 5
[INFO|trainer.py:773] 2023-08-16 04:36:08,451 >>   Instantaneous batch size per device = 12
[INFO|trainer.py:774] 2023-08-16 04:36:08,451 >>   Total train batch size (w. parallel, distributed & accumulation) = 12
[INFO|trainer.py:775] 2023-08-16 04:36:08,451 >>   Gradient Accumulation steps = 1
[INFO|trainer.py:776] 2023-08-16 04:36:08,451 >>   Total optimization steps = 900
[INFO|trainer.py:777] 2023-08-16 04:36:08,452 >>   Number of trainable parameters = 1,003,520
trainable params: 1,003,520 || all params: 15,518,459,904 || trainable%: 0.00646662108358662
  0%|          | 0/900 [00:00<?, ?it/s][WARNING|logging.py:280] 2023-08-16 04:36:08,474 >> You're using a GPT2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
  0%|          | 1/900 [00:29<7:24:26, 29.66s/it]                                                   0%|          | 1/900 [00:30<7:24:26, 29.66s/it]  0%|          | 2/900 [01:08<8:45:28, 35.11s/it]                                                   0%|          | 2/900 [01:08<8:45:28, 35.11s/it]  0%|          | 3/900 [01:35<7:52:20, 31.60s/it]                                                   0%|          | 3/900 [01:36<7:52:20, 31.60s/it]  0%|          | 4/900 [01:36<4:46:39, 19.20s/it]                                                   0%|          | 4/900 [01:37<4:46:39, 19.20s/it]  1%|          | 5/900 [02:14<6:27:07, 25.95s/it]                                                   1%|          | 5/900 [02:14<6:27:07, 25.95s/it]  1%|          | 6/900 [02:42<6:39:02, 26.78s/it]                                                   1%|          | 6/900 [02:42<6:39:02, 26.78s/it]  1%|          | 7/900 [02:42<4:29:19, 18.10s/it]                                                   1%|          | 7/900 [02:43<4:29:19, 18.10s/it]  1%|          | 8/900 [03:10<5:12:36, 21.03s/it]                                                   1%|          | 8/900 [03:10<5:12:36, 21.03s/it]  1%|          | 9/900 [03:43<6:10:20, 24.94s/it]                                                   1%|          | 9/900 [03:43<6:10:20, 24.94s/it]  1%|          | 10/900 [03:43<4:16:34, 17.30s/it]                                                    1%|          | 10/900 [03:44<4:16:34, 17.30s/it]  1%|          | 11/900 [04:13<5:14:40, 21.24s/it]                                                    1%|          | 11/900 [04:13<5:14:40, 21.24s/it]  1%|▏         | 12/900 [04:14<3:39:31, 14.83s/it]                                                    1%|▏         | 12/900 [04:14<3:39:31, 14.83s/it]  1%|▏         | 13/900 [04:42<4:40:57, 19.01s/it]                                                    1%|▏         | 13/900 [04:42<4:40:57, 19.01s/it]  2%|▏         | 14/900 [05:11<5:23:03, 21.88s/it]                                                    2%|▏         | 14/900 [05:11<5:23:03, 21.88s/it]  2%|▏         | 15/900 [05:49<6:37:21, 26.94s/it]                                                    2%|▏         | 15/900 [05:49<6:37:21, 26.94s/it]  2%|▏         | 16/900 [06:27<7:24:20, 30.16s/it]                                                    2%|▏         | 16/900 [06:27<7:24:20, 30.16s/it]  2%|▏         | 17/900 [06:27<5:11:16, 21.15s/it]                                                    2%|▏         | 17/900 [06:28<5:11:16, 21.15s/it]  2%|▏         | 18/900 [07:07<6:34:21, 26.83s/it]                                                    2%|▏         | 18/900 [07:07<6:34:21, 26.83s/it]{'loss': 1.4791, 'learning_rate': 9.98888888888889e-05, 'epoch': 0.01, 'memory_allocated (GB)': 51.39, 'max_memory_allocated (GB)': 54.94, 'total_memory_available (GB)': 93.74}
{'loss': 1.4142, 'learning_rate': 9.977777777777779e-05, 'epoch': 0.01, 'memory_allocated (GB)': 54.19, 'max_memory_allocated (GB)': 58.07, 'total_memory_available (GB)': 93.74}
{'loss': 1.6903, 'learning_rate': 9.966666666666667e-05, 'epoch': 0.02, 'memory_allocated (GB)': 54.19, 'max_memory_allocated (GB)': 58.07, 'total_memory_available (GB)': 93.74}
{'loss': 1.3284, 'learning_rate': 9.955555555555556e-05, 'epoch': 0.02, 'memory_allocated (GB)': 54.19, 'max_memory_allocated (GB)': 58.07, 'total_memory_available (GB)': 93.74}
{'loss': 1.5404, 'learning_rate': 9.944444444444446e-05, 'epoch': 0.03, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 2.1821, 'learning_rate': 9.933333333333334e-05, 'epoch': 0.03, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.4391, 'learning_rate': 9.922222222222222e-05, 'epoch': 0.04, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.7894, 'learning_rate': 9.911111111111112e-05, 'epoch': 0.04, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.8642, 'learning_rate': 9.900000000000001e-05, 'epoch': 0.05, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.7254, 'learning_rate': 9.888888888888889e-05, 'epoch': 0.06, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.6238, 'learning_rate': 9.877777777777778e-05, 'epoch': 0.06, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.6729, 'learning_rate': 9.866666666666668e-05, 'epoch': 0.07, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.6081, 'learning_rate': 9.855555555555556e-05, 'epoch': 0.07, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.7678, 'learning_rate': 9.844444444444444e-05, 'epoch': 0.08, 'memory_allocated (GB)': 57.08, 'max_memory_allocated (GB)': 61.29, 'total_memory_available (GB)': 93.74}
{'loss': 1.3347, 'learning_rate': 9.833333333333333e-05, 'epoch': 0.08, 'memory_allocated (GB)': 70.98, 'max_memory_allocated (GB)': 76.64, 'total_memory_available (GB)': 93.74}
{'loss': 1.5015, 'learning_rate': 9.822222222222223e-05, 'epoch': 0.09, 'memory_allocated (GB)': 76.92, 'max_memory_allocated (GB)': 83.13, 'total_memory_available (GB)': 93.74}
{'loss': 1.6236, 'learning_rate': 9.811111111111113e-05, 'epoch': 0.09, 'memory_allocated (GB)': 76.92, 'max_memory_allocated (GB)': 83.13, 'total_memory_available (GB)': 93.74}
{'loss': 1.4062, 'learning_rate': 9.8e-05, 'epoch': 0.1, 'memory_allocated (GB)': 84.61, 'max_memory_allocated (GB)': 91.49, 'total_memory_available (GB)': 93.74}
Traceback (most recent call last):
  File "run_lora_clm_starcoder.py", line 569, in <module>
    main()
  File "run_lora_clm_starcoder.py", line 561, in main
    trainer.train(resume_from_checkpoint=training_args.resume_from_checkpoint)
  File "/usr/local/lib/python3.8/dist-packages/optimum/habana/transformers/trainer.py", line 572, in train
    return inner_training_loop(
  File "/usr/local/lib/python3.8/dist-packages/optimum/habana/transformers/trainer.py", line 1001, in _inner_training_loop
    self.optimizer.step()
  File "/usr/local/lib/python3.8/dist-packages/torch/optim/lr_scheduler.py", line 69, in wrapper
    return wrapped(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/torch/optim/optimizer.py", line 280, in wrapper
    out = func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/habana_frameworks/torch/hpex/optimizers/FusedAdamW.py", line 58, in wrap_
    result = step_func(*args, **kwargs)
  File "/usr/local/lib/python3.8/dist-packages/habana_frameworks/torch/hpex/optimizers/FusedAdamW.py", line 87, in step
    grad = p.grad.data
RuntimeError: [Rank:0] FATAL ERROR :: MODULE:PT_BRIDGE Exception in Launch thread...
Check $HABANA_LOGS/ for details[Rank:0] FATAL ERROR :: MODULE:PT_DEVMEM Allocation failed for size::75497472 (72)MB
[Rank:0] Habana exception raised from get_pointer at device_memory.cpp:913
  2%|▏         | 18/900 [07:50<6:24:30, 26.16s/it]